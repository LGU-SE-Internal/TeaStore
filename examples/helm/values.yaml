clientside_loadbalancer: true # Deploys as Statefulset which enables communication to every instance individually. A kubernetes service is used otherwise
webui:
  enabled: true
  replicaCount: 1
  image:
    repository: descartesresearch/teastore-webui
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
  imagePullSecrets: []
  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}
  service:
    type: NodePort
    port: 80
    annotations: {}
  resources: {}
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80
  nodeSelector: {}
  tolerations: []
  affinity: {}
  svc_name: teastore-webui
registry:
  enabled: true
  image:
    repository: descartesresearch/teastore-registry
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
  imagePullSecrets: []
  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}
  service:
    port: 8080
    annotations: {}
  resources: {}
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80
  nodeSelector: {}
  tolerations: []
  affinity: {}
  svc_name: teastore-registry
db:
  enabled: true
  image:
    repository: descartesresearch/teastore-db
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
  imagePullSecrets: []
  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}
  service:
    port: 3306
    annotations: {}
  resources: {}
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80
  nodeSelector: {}
  tolerations: []
  affinity: {}
  svc_name: teastore-db
auth:
  enabled: true
  replicaCount: 1
  image:
    repository: descartesresearch/teastore-auth
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
  imagePullSecrets: []
  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}
  service:
    type: NodePort
    port: 8080
    annotations: {}
  resources: {}
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80
  nodeSelector: {}
  tolerations: []
  affinity: {}
  svc_name: teastore-auth
image:
  enabled: true
  replicaCount: 1
  image:
    repository: descartesresearch/teastore-image
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
  imagePullSecrets: []
  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}
  service:
    type: NodePort
    port: 8080
    annotations: {}
  resources: {}
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80
  nodeSelector: {}
  tolerations: []
  affinity: {}
  svc_name: teastore-image
recommender:
  enabled: true
  replicaCount: 1
  image:
    repository: descartesresearch/teastore-recommender
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
  imagePullSecrets: []
  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}
  service:
    type: NodePort
    port: 8080
    annotations: {}
  resources: {}
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80
  nodeSelector: {}
  tolerations: []
  affinity: {}
  svc_name: teastore-recommender
persistence:
  enabled: true
  replicaCount: 1
  image:
    repository: descartesresearch/teastore-persistence
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
  imagePullSecrets: []
  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}
  service:
    type: NodePort
    port: 8080
    annotations: {}
  resources: {}
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80
  nodeSelector: {}
  tolerations: []
  affinity: {}
  svc_name: teastore-persistence

# OpenTelemetry Instrumentation settings
opentelemetry:
  enabled: true
  # Language type for instrumentation: java, python, nodejs, dotnet, go, ruby, php
  language: java
  # The instrumentation resource name in monitoring namespace
  instrumentationName: "opentelemetry-kube-stack"
  # The namespace where OpenTelemetry Instrumentation resource is deployed
  monitoringNamespace: "monitoring"

# HTTP Load Generator settings
httploadgen:
  enabled: false
  replicaCount: 1
  image:
    repository: 10.10.10.240/library/teastore-httploadgen
    pullPolicy: Always
    tag: "latest"
  service:
    type: ClusterIP
    port: 24226
  resources:
    limits:
      cpu: 2000m
      memory: 2Gi
    requests:
      cpu: 500m
      memory: 512Mi
  nodeSelector: {}

# HTTP Load Director settings
httploaddirector:
  enabled: false
  restartPolicy: Never
  image:
    repository: 10.10.10.240/library/teastore-httploaddirector
    pullPolicy: Always
    tag: "latest"
  # Load profile to use (file path in container)
  loadProfile: "/director/profiles/increasingLowIntensity.csv"
  # Lua script to use (file path in container)
  luaScript: "/director/scripts/teastore_browse.lua"
  # Output file path
  outputFile: "/director/results/output.csv"
  # Number of load generation threads
  numThreads: 10
  # Docker monitoring configuration
  dockerMonitor:
    enabled: false
    # Comma-separated values: <IP>:<PORT>:<CONTAINER_ID>,<IP>:<PORT>:<CONTAINER_ID>
    targets: ""
  resources:
    limits:
      cpu: 1000m
      memory: 1Gi
    requests:
      cpu: 250m
      memory: 256Mi
  nodeSelector: {}

# JMeter Load Testing settings
jmeter:
  enabled: true
  backoffLimit: 0
  restartPolicy: Never
  image:
    repository: 10.10.10.240/library/teastore-jmeter
    pullPolicy: Always
    tag: "latest"
  # Target WebUI service
  targetHost: "teastore-webui"
  targetPort: "8080"
  resources:
    limits:
      cpu: 2000m
      memory: 2Gi
    requests:
      cpu: 500m
      memory: 512Mi
  nodeSelector: {}
